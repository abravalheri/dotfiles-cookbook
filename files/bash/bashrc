# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

export CONFIG_HOME=${XDG_CONFIG_HOME:=$HOME/.config}
export DATA_HOME=${XDG_DATA_HOME:=$HOME/.local/share}
export CACHE_HOME=${XDG_CACHE_HOME:=$HOME/.cache}

export VIMDIR=$HOME/.vim
export EDITOR=vim

# If not running interactively, don't do anything
case $- in
 *i*) ;;
   *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar

# If set, extended pattern matching features
shopt -s extglob

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
  debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
  *color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
  if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
  # We have color support; assume it's compliant with Ecma-48
  # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
  # a case would tend to support setf rather than setaf.)
    color_prompt=yes
  else
    color_prompt=
  fi
fi

if [ "$color_prompt" = yes ]; then
  export GIT_PS1_SHOWCOLORHINTS=true
  PRE='\[\033['
  POST='m\]'
  RESET='\[\e[m\]'

  RED="${PRE}01;41;37${POST}"
  LASTEXIT="${RED}\${?#0}${RESET}"

  BLUE="${PRE}01;34${POST}"
  BEFORE_PS="${BLUE}\w${RESET}"
else
  LASTEXIT="\${?#0}"
  BEFORE_PS='\w'
fi
unset color_prompt force_color_prompt

if command -v git &>/dev/null && [ -f $CONFIG_HOME/bash/git-prompt.sh ]; then
  export GIT_PS1_HIDE_IF_PWD_IGNORED=true
  export GIT_PS1_SHOWDIRTYSTATE=true
  export GIT_PS1_SHOWUNTRACKEDFILES=true
  export GIT_PS1_DESCRIBE_STYLE=branch

  . $CONFIG_HOME/bash/git-prompt.sh

  PROMPT_COMMAND="__git_ps1 '${debian_chroot:+($debian_chroot)}$LASTEXIT$BEFORE_PS' '\\$ '"
else
  PS1="${debian_chroot:+($debian_chroot)}$LASTEXIT$BEFORE_PS\\$ "
fi

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
  PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
  ;;
*)
  ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  alias ls='ls --color=auto'
  #alias dir='dir --color=auto'
  #alias vdir='vdir --color=auto'

  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ls='ls -rtF'
alias ll='ls -al'
alias la='ls -A'
alias l='ls -C'

alias ..='cd ..'
alias ...='cd ..;cd ..'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.config/bash/aliases.sh, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f $CONFIG_HOME/bash/aliases ]; then
  . $CONFIG_HOME/bash/aliases.sh
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# which ignores previous aliases but is not portable
# command does not ignore aliases, but is built in
# so it's better to try to check first with which and fallback to command
if (which tmux &>/dev/null || command -v tmux &>/dev/null); then
  alias tmux='tmux -2'
  alias tm='tmux -2 new-session -A -s main'

  if [ -z $TMUX ]; then
    tmux -2 new-session -A -s main
  fi
fi

if [ -f $CONFIG_HOME/bash/extras ]; then
  . $CONFIG_HOME/bash/extras.sh
fi
